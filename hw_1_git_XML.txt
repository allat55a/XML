1. Создать внешний репозиторий c названием XML.
Repositories -> New-> "Repository name":"XML" -> "Create repository"

 2. Клонировать репозиторий XML на локальный компьютер.
git clone https://github.com/allat55a/XML.git

 3. Внутри локального XML создать файл “new.xml"
touch new.xml

 4. Добавить файл под гит.
git add new.xml

 5. Закоммитить файл.
git commit -m " add xml file"

 6. Отправить файл на внешний GitHub репозиторий.
git push

 7. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
cat >> new.xml
<?xml version="1.0"?>
<person>
<fullname>Polevitskaya Alla Dmitrievna</fullname>
<age>24</age>
<pets>2</pets>
</person>
 
 8. Отправить изменения на внешний репозиторий.
git add new.xml; git commit; git push

 9. Создать файл preferences.xml
touch preferences.xml

 10. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
cat >> preferences.xml
<?xml version="1.0"?>
<preferences>
<movie>The Green Mile</movie>
<TVseries>Hannibal</TVseries>
<food>georgian cuisine</food>
<season>summer</season>
<countryforvisit>Norway</countryforvisit>
</preferences>

 11. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате JSON
cat > skills.xml
<?xml version="1.0"?>
<skills>HTTP, JSON, XML, Тестирование API через Postman (JS, автотесты API), Снифинг http web трафика через Charles и Fiddler, Dev Tools веб браузеров (Google Chrome, FireFox), Мобильное тестирование, Android Studio,
Перехват (сниффинг) мобильного трафика через Charles и Fiddler на iOS и Android, Командная строка (terminal) Linux, Основы SQL, База данных Postgres, Нереляционная база данных Redis, Нагрузочное тестирование в Jmeter, Scrum</skills>

 12. Сделать коммит в одну строку.
git add .; git commit -m "add 2 files"

 13. Отправить сразу 2 файла на внешний репозиторий.
git push

 14. На веб интерфейсе создать файл bug_report.xml.
Add file -> create new file -> name your file " bug_report.xml"

 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
нажимаем на "Commit changes"

 16. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
Edit this file -> добавляем баг репорт в фотмате json.

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Нажимаем "Commite changes"

 18. Синхронизировать внешний и локальный репозиторий XML
git pull
